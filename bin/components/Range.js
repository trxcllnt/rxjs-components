// Generated by CoffeeScript 1.3.1
var Range,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

Range = (function(_super) {

  __extends(Range, _super);

  Range.name = 'Range';

  function Range() {
    Range.__super__.constructor.call(this);
    this.define('min', 0);
    this.define('max', 100);
    this.useObservable('value', this.define('value', 50).combineLatest(this.min, function(val, min) {
      if (val >= min) {
        return val;
      } else {
        return min;
      }
    }).combineLatest(this.max, function(val, max) {
      if (val <= max) {
        return val;
      } else {
        return max;
      }
    }));
    this.define('skin', new HTMLSliderSkin()).subscribe(this.onExtensionChanged());
  }

  return Range;

})(UIElement);

// Generated by CoffeeScript 1.3.1
var UIElement,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

UIElement = (function(_super) {

  __extends(UIElement, _super);

  UIElement.name = 'UIElement';

  function UIElement() {
    UIElement.__super__.constructor.call(this);
    this.define('x', NaN);
    this.define('y', NaN);
    this.define('z', NaN);
    this.define('width', NaN);
    this.define('height', NaN);
    this.define('parent', null);
    this.define('index', -1);
    this.useObservable('addedChild', this.define('addedChild', null).where(function(x) {
      return x != null;
    }));
    this.useObservable('removedChild', this.define('removedChild', null).where(function(x) {
      return x != null;
    }));
    return;
  }

  UIElement.prototype.onExtensionChanged = function() {
    var extension,
      _this = this;
    extension = null;
    return function(newExtension) {
      if (newExtension === extension) {
        return;
      }
      if ((extension != null) && (extension.element != null)) {
        extension.element.onCompleted();
      }
      if ((newExtension != null) && (newExtension.element != null)) {
        (extension = newExtension).element = _this;
      }
    };
  };

  return UIElement;

})(Dictionary);
